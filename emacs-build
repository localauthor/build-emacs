#!/bin/sh

## Modified version of https://github.com/mclear-tools/build-emacs-macos

## Derived from https://github.com/renard/emacs-build-macosx
## Patches from https://github.com/d12frosted/homebrew-emacs-plus
## See also https://github.com/jimeh/build-emacs-for-macos

# ======================================================
# Exit on non-zero status
# See https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html
# ======================================================
set -e


# ======================================================
# Set Variables
# ======================================================

ROOT_DIR=~/repos/emacs-build/
BUILD_DIR=~/tmp/emacs-build/
SRC_DIR=~/repos/emacs/


# ======================================================
# Start with a clean build
# ======================================================

rm -rf ${BUILD_DIR}
mkdir ${BUILD_DIR}

cd ${SRC_DIR}


# ======================================================
# Input for version otherwise default to master
# ======================================================

if test -n "$1"; then
    commit="$1"
else
    commit="master"
fi

git checkout $commit
git pull

git archive --format tar $commit | tar -C ${BUILD_DIR} -xvf -

cd ${BUILD_DIR}


# ======================================================
# Apply Patches
# ======================================================

PATCH_LIST=`find ${ROOT_DIR}/patches -name '*.patch'`

for f in ${PATCH_LIST}; do
    patch -p1 -i $f
done


# ======================================================
# Autogen
# ======================================================

# Generate config files
./autogen.sh


# ======================================================
# Set Compile Flags
# ======================================================

# Use Clang for slightly faster builds
# See https://leeifrankjaw.github.io/articles/clang_vs_gcc_for_emacs.html
# See https://alibabatech.medium.com/gcc-vs-clang-llvm-an-in-depth-comparison-of-c-c-compilers-899ede2be378

CFLAGS="-g -O2"
export CC=clang
export OBJC=clang


# ======================================================
# Configure emacs
# ======================================================

# Here we set config options for emacs
# For more info see config-options.txt

# if test -n "$2"; then
#     configs="$2"
# fi

./configure \
    --with-ns \
    --with-native-compilation \
    --without-compress-install \
    --with-xwidgets \
    --with-mailutils \
    --with-imagemagick \
    --without-dbus \
    --with-mps


# ======================================================
# Build and install everything
# ======================================================

## Check number of processors & use as many as we can!
NCPU=$(getconf _NPROCESSORS_ONLN)

make bootstrap -j$NCPU || exit 1 && make install -j$NCPU

# make -j$NCPU || exit 1 && make install -j$NCPU


# ======================================================
# Copy C Source Code
# ======================================================

# Copy C source files to Emacs
cp -r ${BUILD_DIR}/src ${BUILD_DIR}/nextstep/Emacs.app/Contents/Resources/


# ======================================================
# Inject PATH into Info.plist
# So emacs can find gcc and libgccjit
# without setting LIBRARY_PATH in earlyinit.el
# ======================================================

alias pbd=/usr/libexec/PlistBuddy
export emacsapp="${BUILD_DIR}/nextstep/Emacs.app"
export infoplist="${emacsapp}/Contents/Info.plist"

pbd -c "Add :LSEnvironment dict" "${infoplist}"
pbd -c "Add :LSEnvironment:PATH string" "${infoplist}"
pbd -c "Set :LSEnvironment:PATH $(echo "$PATH")" "${infoplist}"
pbd -c "Print :LSEnvironment" "${infoplist}"
touch ${emacsapp}


# ======================================================
# Move new app
# ======================================================

if [ "${commit}" = "master" ] && [ -e /Applications/Emacs.app ]; then
    cd /Applications
    PRIOR=$(stat -f %SB-%N -t %m-%d-%y Emacs.app)
    mv Emacs.app ${PRIOR}
    mv ${PRIOR} '/Applications/Emacs Prior Builds/'
fi

if [ "${commit}" = "master" ]; then
    APP_NAME=Emacs
else
    APP_NAME=Emacs-${commit//\//-} # replace forward slash with dash
fi

mv ${BUILD_DIR}/nextstep/Emacs.app /Applications/${APP_NAME}.app


# ======================================================
# Change icon
# ======================================================

# Copy new icon to emacs (currently using a big sur icon)
# See https://github.com/d12frosted/homebrew-emacs-plus/issues/419

cp ${ROOT_DIR}/emacs-big-sur.icns /Applications/${APP_NAME}.app/Contents/Resources/Emacs.icns


echo "DONE!"
